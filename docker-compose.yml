services:
  # Backend API service
  api:
    build:
      context: ./backend
      dockerfile: DockerFile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: 1620
      DB_NAME: skillmatchesai
      JWT_SECRET: your-secret-key-change-in-production
      JWT_EXPIRES_IN: 1d
    volumes:
      - ./backend/src:/usr/src/app/src
      - ./backend/package.json:/usr/src/app/package.json
      - ./backend/tsconfig.json:/usr/src/app/tsconfig.json
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: 1620
      POSTGRES_USER: postgres
      POSTGRES_DB: skillmatchesai
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # PgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@jobplex.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data: